{"version":3,"sources":["redux/stoner/stonerTypes.js","redux/stoner/stonerActions.js","components/AlbumContainer.jsx","components/DiscographyContainer.jsx","components/Pagination.jsx","components/NewestReleaseContainer.jsx","components/Header.jsx","components/Footer.jsx","redux/stoner/stonerReducers.js","redux/rootReducer.js","redux/store.js","App.js","index.js"],"names":["GET_DISCOGRAPHY","GET_ALBUM","CHANGE_PAGE","CHANGE_ALBUMS_PER_PAGE","getDiscography","bandName","type","getAlbum","album","connect","state","stoner","based","dispatch","filter","x","title","group","image","year","country","tracklist","artists","reviews","className","to","onClick","src","alt","map","track","id","trackName","duration","artist","name","role","review","author","text","base","sort","a","b","albumsPerPage","activePage","firstAlbumId","lastAlbumId","changePage","changeAlbumsPerPage","pageNumbers","i","Math","ceil","length","push","number","href","NewestReleaseContainer","props","baseSort","slice","prevProps","this","console","log","width","height","React","Component","Footer","initialState","lastALbumId","stonerReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","App","exact","path","component","AlbumContainer","DiscographyContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ef79623.chunk.js","sourcesContent":["export const GET_DISCOGRAPHY = \"GET_DISCOGRAPHY\";\r\nexport const GET_ALBUM = \"GET_ALBUM\";\r\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\r\nexport const CHANGE_ALBUMS_PER_PAGE = \"CHANGE_ALBUMS_PER_PAGE\";\r\n","import {\r\n  GET_ALBUM,\r\n  GET_DISCOGRAPHY,\r\n  CHANGE_PAGE,\r\n  CHANGE_ALBUMS_PER_PAGE\r\n} from \"./stonerTypes\";\r\n\r\nexport const getDiscography = (bandName) => {\r\n  return {\r\n    type: GET_DISCOGRAPHY,\r\n    bandName: bandName\r\n  };\r\n};\r\n\r\nexport const getAlbum = (bandName, album) => {\r\n  return {\r\n    type: GET_ALBUM,\r\n    bandName: bandName,\r\n    album: album\r\n  };\r\n};\r\n\r\nexport const changePage = (activePage) => {\r\n  return {\r\n    type: CHANGE_PAGE,\r\n    activePage: activePage,\r\n  };\r\n};\r\n\r\nexport const changeAlbumsPerPage = (albumsPerPage) => {\r\n  return {\r\n    type: CHANGE_ALBUMS_PER_PAGE,\r\n    albumsPerPage: albumsPerPage,\r\n  };\r\n};","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { getDiscography } from \"../redux\";\n\nfunction Pagination({ bandName, album, getDiscography, based }) {\n  const base = based.filter(x => (x.bandName === bandName)).filter(x => (x.title === album));\n  const { title, group, image, year, country, tracklist, artists, reviews } = base[0];\n  return (\n    <div className=\"album\">\n      <h2 className=\"album__title\">{title}</h2>\n      <p className=\"album__artist\"><Link to=\"/discography\" className=\"artist__link\" onClick={() => getDiscography(bandName)}><p>{group}<span className=\"album__country\">({country})</span></p></Link></p>\n      <div className=\"album__img-year-country-tracklist\">\n        <div className=\"album__img-year-country\">\n          <img src={image} alt={title} />\n          <p className=\"album__year\">{year}</p>\n        </div>\n        <div className=\"album__tracklist\">\n          <p className=\"tracklist__title\">Tracklist</p>\n          <ul>\n            {tracklist.map(track => (\n              <li key={track.id} >\n                {track.id} - {track.trackName} - {track.duration}\n              </li>)\n            )}\n          </ul>\n          <p className=\"artist__title\">Artists</p>\n          <ul>\n            {artists.map(artist => (\n              <li key={artist.name} className=\"artist__item\">\n                {artist.name} - {artist.role}\n              </li>)\n            )}\n          </ul>\n        </div>\n      </div>\n      <p className=\"album__reviews-title\">Reviews</p>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.author} className=\"review\">\n            <h4 className=\"review__title\">{review.author}</h4>\n            <p className=\"review__text\">{review.text}</p>\n          </li>)\n        )}\n      </ul>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bandName: state.stoner.bandName,\n    album: state.stoner.album,\n    based: state.stoner.based,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getDiscography: (bandName) => dispatch(getDiscography(bandName))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Pagination);","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { getAlbum } from \"../redux\";\n\nfunction DiscographyContainer({ bandName, getAlbum, album, based }) {\n    const base = based.filter(x => (x.bandName === bandName));\n    return (\n        <div className=\"discography\">\n            <h2 className=\"discography__title\">Discography of {bandName}</h2>\n            <ul>\n                {base.sort((a, b) => (b.year-a.year)).map(album => (\n                    <li key={album.title} className=\"discography__album\">\n                        <img src={album.image} alt={album.title}/>\n                        <p className=\"discography__album-title\"><Link to=\"/album\" className=\"discography__album-title-link\" onClick={() => getAlbum(bandName, album.title)}>{album.title}</Link></p>\n                        <p className=\"discography__year\">{album.year}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        bandName: state.stoner.bandName,\n        album: state.stoner.album,\n        based: state.stoner.based\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    getAlbum: (bandName, album) => dispatch(getAlbum(bandName, album))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DiscographyContainer);","import React from 'react';\nimport based from './../base.json';\nimport { connect } from 'react-redux';\nimport { changePage, changeAlbumsPerPage } from \"../redux\";\n\nfunction Pagination({ activePage, albumsPerPage, firstAlbumId, lastAlbumId, changePage, changeAlbumsPerPage }) {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(based.length / albumsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <div className=\"pagination-container\">\n      <div className=\"pagination__pages\">\n        <ul className='pagination'>\n          {pageNumbers.map(number => (\n            !(number == activePage) && (\n              <li key={number} className='page-item'>\n                <a onClick={() => changePage(number)} href='#' className=\"page-link\">{number}</a>\n              </li>) ||\n            (number == activePage) && (\n              <li key={number} className='page-item'>\n                <a onClick={() => changePage(number)} href='#' className=\"page-link page-link--active\">{number}</a>\n              </li>)\n          ))}\n        </ul>\n        <p className=\"pagination-message\">Page Numbers</p>\n      </div>\n      <div className=\"pagination__albums-on-page\">\n        <p className=\"pagination-albums-on-page\">Albums on Page</p>\n        {(albumsPerPage === 5) && (<>\n          <button className=\"albums-on-page albums-on-page--active\" onClick={() => changeAlbumsPerPage(5)}>5</button>\n          <button className=\"albums-on-page\" onClick={() => changeAlbumsPerPage(10)}>10</button>\n          <button className=\"albums-on-page\" onClick={() => changeAlbumsPerPage(20)}>20</button></>)\n        }\n        {(albumsPerPage === 10) && (<>\n          <button className=\"albums-on-page\" onClick={() => changeAlbumsPerPage(5)}>5</button>\n          <button className=\"albums-on-page albums-on-page--active\" onClick={() => changeAlbumsPerPage(10)}>10</button>\n          <button className=\"albums-on-page\" onClick={() => changeAlbumsPerPage(20)}>20</button></>)\n        }\n        {(albumsPerPage === 20) && (<>\n          <button className=\"albums-on-page\" onClick={() => changeAlbumsPerPage(5)}>5</button>\n          <button className=\"albums-on-page\" onClick={() => changeAlbumsPerPage(10)}>10</button>\n          <button className=\"albums-on-page albums-on-page--active\" onClick={() => changeAlbumsPerPage(20)}>20</button></>)\n        }\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    albumsPerPage: state.stoner.albumsPerPage,\n    activePage: state.stoner.activePage,\n    albumsPerPage: state.stoner.albumsPerPage,\n    firstAlbumId: state.stoner.firstAlbumId,\n    lastAlbumId: state.stoner.lastAlbumId,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  changePage: (activePage) => dispatch(changePage(activePage)),\n  changeAlbumsPerPage: (albumsPerPage) => dispatch(changeAlbumsPerPage(albumsPerPage))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Pagination);","import {\n    Link\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { getAlbum, getDiscography } from \"../redux\";\nimport React from 'react';\nimport Pagination from \"./Pagination\";\n\nclass NewestReleaseContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            albumsPerPage: this.props.albumsPerPage,\n            activePage: this.props.activePage,\n            based: this.props.based,\n            lastAlbumId: this.albumsPerPage*this.activePage,\n            firstAlbumId: this.lastAlbumId - this.albumsPerPage,\n            baseSort: this.props.based.sort((a, b) => (b.year - a.year)).slice(this.firstAlbumId, this.lastAlbumId),\n        };\n        this.getDiscography = this.props.getDiscography;\n        this.getAlbum = this.props.getAlbum;\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.activePage !== prevProps.activePage || this.props.albumsPerPage !== prevProps.albumsPerPage ) {\n            this.state.baseSort = this.state.based.sort((a, b) => (b.year - a.year)).slice(this.firstAlbumId, this.lastAlbumId);\n        }\n    }\n\n    render() {\n        this.state.baseSort = [...this.props.based.sort((a, b) => (b.year - a.year))].slice(this.firstAlbumId, this.lastAlbumId);\n        console.log(this.baseSort);\n        return (<\n            div className=\"newest\">\n            <h3 className=\"newest__title\">Newest Stoner Records </h3>\n            <ul> {this.state.baseSort.map(album => (<li key={album.title} >\n                <img src={album.image} width=\"200\" height=\"200\" alt={album.title} />\n                <p><Link to=\"/discography\" className=\"album__band\" onClick={() => this.getDiscography(album.bandName)}>{album.bandName}</Link></p>\n                <p><Link to=\"/album\" className=\"album__description\" onClick={() => this.getAlbum(album.bandName, album.title)}>{album.title}</Link></p>\n                <p>{album.year}</p></li>))}</ul>\n            <Pagination />\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        bandName: state.stoner.bandName,\n        album: state.stoner.album,\n        albumsPerPage: state.stoner.albumsPerPage,\n        activePage: state.stoner.activePage,\n        based: state.stoner.based\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    getAlbum: (bandName, album) => dispatch(getAlbum(bandName, album)),\n    getDiscography: (bandName) => dispatch(getDiscography(bandName))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(NewestReleaseContainer);","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nfunction Header({ bandName, album }) {\n    return (\n        <div className=\"header\" >\n            <h1 className=\"title-message\">Stoner Base</h1>\n            <div className=\"navigation\">\n                <ul>\n                    <li><Link to=\"/\" className=\"navigation__link-to-main\">Main Page</Link></li>\n                </ul>\n            </div >\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        bandName: state.stoner.bandName,\n        album: state.stoner.album,\n    }\n}\n\nexport default connect(\n    mapStateToProps\n)(Header);","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Footer() {\n    return (\n        <div className=\"footer\">\n            <ul className=\"social-links\">\n                <li><a href=\"https://github.com/DmitryZhuravskiy\" className=\"social-link\">Me in GitHub</a></li>\n                <li><a href=\"https://bronnitsy.hh.ru/resume/944e847aff0568d8200039ed1f393265335644\"  className=\"social-link\">Me in hh.ru</a></li>\n                <li><a href=\"https://www.linkedin.com/in/dmitry-zhuravskiy-5081681b8/\"  className=\"social-link\">Me in Linkedin</a></li>\n            </ul>\n            <p className=\"copywright\">Made from Dmtiry Zhuravskiy in 2021</p>\n        </div>\n    )\n}\n\nexport default Footer;","import {\r\n  GET_ALBUM,\r\n  GET_DISCOGRAPHY,\r\n  CHANGE_PAGE,\r\n  CHANGE_ALBUMS_PER_PAGE\r\n} from \"./stonerTypes\";\r\n\r\nimport base from './../../base.json';\r\n\r\nconst initialState = {\r\n  bandName: \"Void Droid\",\r\n  album: \"Bipolar\",\r\n  albumsPerPage: 5,\r\n  activePage: 1,\r\n  firstAlbumId: 1,\r\n  lastALbumId: 5,\r\n  based: base\r\n};\r\n\r\nconst stonerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALBUM:\r\n      return {\r\n        ...state,\r\n        bandName: action.bandName,\r\n        album: action.album\r\n      };\r\n\r\n    case CHANGE_PAGE:\r\n      return {\r\n        ...state,\r\n        activePage: action.activePage,\r\n        firstAlbumId: action.activePage*state.albumsPerPage - state.albumsPerPage,\r\n        lastALbumId: action.activePage*state.albumsPerPage,\r\n        based: base.sort((a, b) => (b.year - a.year)).slice(state.firstAlbumId, state.lastAlbumId)\r\n      };\r\n\r\n    case CHANGE_ALBUMS_PER_PAGE:\r\n      return {\r\n        ...state,\r\n        albumsPerPage: action.albumsPerPage,\r\n        firstAlbumId: state.activePage*action.albumsPerPage - action.albumsPerPage,\r\n        lastALbumId: state.activePage*action.albumsPerPage,\r\n        based: base.sort((a, b) => (b.year - a.year)).slice(state.firstAlbumId, state.lastAlbumId)\r\n      };\r\n\r\n      case GET_DISCOGRAPHY:\r\n        return {\r\n          ...state,\r\n          bandName: action.bandName,\r\n          album: '',\r\n          based: base\r\n        };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default stonerReducer;","import { combineReducers } from 'redux'\r\nimport stonerReducer from './stoner/stonerReducers'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    stoner: stonerReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(logger, thunk)));\r\n\r\nexport default store;\r\n","import './App.css';\nimport React from 'react';\nimport {\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport AlbumContainer from \"./components/AlbumContainer\";\nimport DiscographyContainer from \"./components/DiscographyContainer\";\nimport NewestReleaseContainer from \"./components/NewestReleaseContainer\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"app-container\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={NewestReleaseContainer} />\n            <Route path=\"/album\" component={AlbumContainer} />\n            <Route path=\"/discography\" component={DiscographyContainer} />\n          </Switch>\n          <Footer />\n        </div>\n        </BrowserRouter>\n      </Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));\n"],"sourceRoot":""}